{"version":3,"names":["AnimatedScrollView","Animated","createAnimatedComponent","ScrollView","NestableScrollContainerInner","props","useSafeNestableScrollContainerContext","outerScrollOffset","containerSize","scrollViewSize","scrollableRef","outerScrollEnabled","onScroll","useAnimatedScrollHandler","contentOffset","value","y","onLayout","useStableCallback","event","layout","nativeEvent","height","onContentSizeChange","w","h","NestableScrollContainer","React","forwardRef","forwardedRef","undefined"],"sources":["NestableScrollContainer.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { LayoutChangeEvent, ScrollViewProps } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport Animated, { useAnimatedScrollHandler } from \"react-native-reanimated\";\r\nimport {\r\n  NestableScrollContainerProvider,\r\n  useSafeNestableScrollContainerContext,\r\n} from \"../context/nestableScrollContainerContext\";\r\nimport { useStableCallback } from \"../hooks/useStableCallback\";\r\n\r\nconst AnimatedScrollView = Animated.createAnimatedComponent(ScrollView);\r\n\r\nfunction NestableScrollContainerInner(props: ScrollViewProps) {\r\n  const {\r\n    outerScrollOffset,\r\n    containerSize,\r\n    scrollViewSize,\r\n    scrollableRef,\r\n    outerScrollEnabled,\r\n  } = useSafeNestableScrollContainerContext();\r\n\r\n  const onScroll = useAnimatedScrollHandler({\r\n    onScroll: ({ contentOffset }) => {\r\n      outerScrollOffset.value = contentOffset.y;\r\n    },\r\n  });\r\n\r\n  const onLayout = useStableCallback((event: LayoutChangeEvent) => {\r\n    const {\r\n      nativeEvent: { layout },\r\n    } = event;\r\n    containerSize.value = layout.height;\r\n  });\r\n\r\n  const onContentSizeChange = useStableCallback((w: number, h: number) => {\r\n    scrollViewSize.value = h;\r\n    props.onContentSizeChange?.(w, h);\r\n  });\r\n\r\n  return (\r\n    <AnimatedScrollView\r\n      {...props}\r\n      onLayout={onLayout}\r\n      onContentSizeChange={onContentSizeChange}\r\n      scrollEnabled={outerScrollEnabled}\r\n      ref={scrollableRef}\r\n      scrollEventThrottle={1}\r\n      onScroll={onScroll}\r\n    />\r\n  );\r\n}\r\n\r\nexport const NestableScrollContainer = React.forwardRef(\r\n  (props: ScrollViewProps, forwardedRef?: React.ForwardedRef<ScrollView>) => {\r\n    return (\r\n      <NestableScrollContainerProvider\r\n        forwardedRef={\r\n          (forwardedRef as React.MutableRefObject<ScrollView>) || undefined\r\n        }\r\n      >\r\n        <NestableScrollContainerInner {...props} />\r\n      </NestableScrollContainerProvider>\r\n    );\r\n  }\r\n);\r\n"],"mappings":"mQAAA,oDAEA,uEACA,uFACA,yFAIA,6D,gnCAEA,GAAMA,mBAAkB,CAAGC,8BAAA,CAASC,uBAAT,CAAiCC,qCAAjC,CAA3B,CAEA,QAASC,6BAAT,CAAsCC,KAAtC,CAA8D,2BAOxD,GAAAC,qEAAA,GAPwD,CAE1DC,iBAF0D,uBAE1DA,iBAF0D,CAG1DC,aAH0D,uBAG1DA,aAH0D,CAI1DC,cAJ0D,uBAI1DA,cAJ0D,CAK1DC,aAL0D,uBAK1DA,aAL0D,CAM1DC,kBAN0D,uBAM1DA,kBAN0D,CAS5D,GAAMC,SAAQ,CAAG,GAAAC,+CAAA,EAAyB,CACxCD,QAAQ,oCAAyB,IAApBE,cAAoB,MAApBA,aAAoB,CAC/BP,iBAAiB,CAACQ,KAAlB,CAA0BD,aAAa,CAACE,CAAxC,CACD,CAFO,gCAlBVT,iBAkBU,4SADgC,CAAzB,CAAjB,CAMA,GAAMU,SAAQ,CAAG,GAAAC,oCAAA,EAAkB,SAACC,KAAD,CAA8B,IAE9CC,OAF8C,CAG3DD,KAH2D,CAE7DE,WAF6D,CAE9CD,MAF8C,CAI/DZ,aAAa,CAACO,KAAd,CAAsBK,MAAM,CAACE,MAA7B,CACD,CALgB,CAAjB,CAOA,GAAMC,oBAAmB,CAAG,GAAAL,oCAAA,EAAkB,SAACM,CAAD,CAAYC,CAAZ,CAA0B,CACtEhB,cAAc,CAACM,KAAf,CAAuBU,CAAvB,CACApB,KAAK,CAACkB,mBAAN,cAAAlB,KAAK,CAACkB,mBAAN,CAA4BC,CAA5B,CAA+BC,CAA/B,EACD,CAH2B,CAA5B,CAKA,MACE,8BAAC,kBAAD,0BACMpB,KADN,EAEE,QAAQ,CAAEY,QAFZ,CAGE,mBAAmB,CAAEM,mBAHvB,CAIE,aAAa,CAAEZ,kBAJjB,CAKE,GAAG,CAAED,aALP,CAME,mBAAmB,CAAE,CANvB,CAOE,QAAQ,CAAEE,QAPZ,6EADF,CAWD,CAEM,GAAMc,wBAAuB,CAAGC,cAAA,CAAMC,UAAN,CACrC,SAACvB,KAAD,CAAyBwB,YAAzB,CAA2E,CACzE,MACE,8BAAC,+DAAD,EACE,YAAY,CACTA,YAAD,EAAwDC,SAF5D,6EAKE,6BAAC,4BAAD,0BAAkCzB,KAAlC,+EALF,CADF,CASD,CAXoC,CAAhC,C"}