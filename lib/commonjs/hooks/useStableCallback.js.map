{"version":3,"names":["useStableCallback","cb","cbRef","useRef","current","identityRetainingCb","useCallback"],"sources":["useStableCallback.ts"],"sourcesContent":["import { useRef, useCallback } from \"react\";\r\n\r\n// Utility hook that returns a function that never has stale dependencies, but\r\n// without changing identity, as a useCallback with dep array would.\r\n// Useful for functions that depend on external state, but\r\n// should not trigger effects when that external state changes.\r\n\r\nexport function useStableCallback<\r\n  T extends (arg1?: any, arg2?: any, arg3?: any) => any\r\n>(cb: T) {\r\n  const cbRef = useRef(cb);\r\n  cbRef.current = cb;\r\n  const identityRetainingCb = useCallback(\r\n    (...args: Parameters<T>) => cbRef.current(...args),\r\n    []\r\n  );\r\n  return identityRetainingCb as T;\r\n}\r\n"],"mappings":"qGAAA,4BAOO,QAASA,kBAAT,CAELC,EAFK,CAEE,CACP,GAAMC,MAAK,CAAG,GAAAC,aAAA,EAAOF,EAAP,CAAd,CACAC,KAAK,CAACE,OAAN,CAAgBH,EAAhB,CACA,GAAMI,oBAAmB,CAAG,GAAAC,kBAAA,EAC1B,iBAA4BJ,MAAK,CAACE,OAAN,OAAAF,KAAK,WAAjC,EAD0B,CAE1B,EAF0B,CAA5B,CAIA,MAAOG,oBAAP,CACD"}