{"version":3,"names":["runOnJS","useAnimatedReaction","useDerivedValue","useSharedValue","DEFAULT_PROPS","SCROLL_POSITION_TOLERANCE","useProps","useAnimatedValues","useRefs","useAutoScroll","flatlistRef","autoscrollThreshold","autoscrollSpeed","scrollOffset","scrollViewSize","containerSize","activeCellSize","hoverOffset","activeIndexAnim","hoverScreenOffset","value","isScrolledUp","isScrolledDown","distToTopEdge","Math","max","distToBottomEdge","hoverPlusActiveCell","isAtTopEdge","isAtBottomEdge","scrollTarget","dragIsActive","cur","prev","shouldAutoScroll","scrollTargetDiff","abs","hasScrolledToTarget","isAtEdge","topDisabled","bottomDisabled","isEdgeDisabled","cellIsActive","scrollToInternal","offset","current","scrollToOffset","animated","distFromEdge","speedPct","targetOffset","min"],"sources":["useAutoScroll.tsx"],"sourcesContent":["import {\r\n  runOnJS,\r\n  useAnimatedReaction,\r\n  useDerivedValue,\r\n  useSharedValue,\r\n} from \"react-native-reanimated\";\r\nimport { DEFAULT_PROPS, SCROLL_POSITION_TOLERANCE } from \"../constants\";\r\nimport { useProps } from \"../context/propsContext\";\r\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\r\nimport { useRefs } from \"../context/refContext\";\r\n\r\nexport function useAutoScroll() {\r\n  const { flatlistRef } = useRefs();\r\n\r\n  const {\r\n    autoscrollThreshold = DEFAULT_PROPS.autoscrollThreshold,\r\n    autoscrollSpeed = DEFAULT_PROPS.autoscrollSpeed,\r\n  } = useProps();\r\n\r\n  const {\r\n    scrollOffset,\r\n    scrollViewSize,\r\n    containerSize,\r\n    activeCellSize,\r\n    hoverOffset,\r\n    activeIndexAnim,\r\n  } = useAnimatedValues();\r\n\r\n  const hoverScreenOffset = useDerivedValue(() => {\r\n    return hoverOffset.value - scrollOffset.value;\r\n  }, []);\r\n\r\n  const isScrolledUp = useDerivedValue(() => {\r\n    return scrollOffset.value - SCROLL_POSITION_TOLERANCE <= 0;\r\n  }, []);\r\n\r\n  const isScrolledDown = useDerivedValue(() => {\r\n    return (\r\n      scrollOffset.value + containerSize.value + SCROLL_POSITION_TOLERANCE >=\r\n      scrollViewSize.value\r\n    );\r\n  }, []);\r\n\r\n  const distToTopEdge = useDerivedValue(() => {\r\n    return Math.max(0, hoverScreenOffset.value);\r\n  }, []);\r\n\r\n  const distToBottomEdge = useDerivedValue(() => {\r\n    const hoverPlusActiveCell = hoverScreenOffset.value + activeCellSize.value;\r\n    return Math.max(0, containerSize.value - hoverPlusActiveCell);\r\n  }, []);\r\n\r\n  const isAtTopEdge = useDerivedValue(() => {\r\n    return distToTopEdge.value <= autoscrollThreshold;\r\n  });\r\n\r\n  const isAtBottomEdge = useDerivedValue(() => {\r\n    return distToBottomEdge.value <= autoscrollThreshold;\r\n  }, []);\r\n\r\n  const scrollTarget = useSharedValue(0);\r\n  const dragIsActive = useDerivedValue(() => {\r\n    return activeIndexAnim.value >= 0;\r\n  }, []);\r\n\r\n  useAnimatedReaction(\r\n    () => {\r\n      return dragIsActive.value;\r\n    },\r\n    (cur, prev) => {\r\n      if (cur && !prev) {\r\n        scrollTarget.value = scrollOffset.value;\r\n      }\r\n    }\r\n  );\r\n\r\n  const shouldAutoScroll = useDerivedValue(() => {\r\n    const scrollTargetDiff = Math.abs(scrollTarget.value - scrollOffset.value);\r\n    const hasScrolledToTarget = scrollTargetDiff < SCROLL_POSITION_TOLERANCE;\r\n\r\n    const isAtEdge = isAtTopEdge.value || isAtBottomEdge.value;\r\n    const topDisabled = isAtTopEdge.value && isScrolledUp.value;\r\n    const bottomDisabled = isAtBottomEdge.value && isScrolledDown.value;\r\n    const isEdgeDisabled = topDisabled || bottomDisabled;\r\n\r\n    const cellIsActive = activeIndexAnim.value >= 0;\r\n\r\n    return hasScrolledToTarget && isAtEdge && !isEdgeDisabled && cellIsActive;\r\n  }, []);\r\n\r\n  function scrollToInternal(offset: number) {\r\n    if (flatlistRef && \"current\" in flatlistRef) {\r\n      flatlistRef.current?.scrollToOffset({ offset, animated: true });\r\n    }\r\n  }\r\n\r\n  useDerivedValue(() => {\r\n    if (!shouldAutoScroll.value) return;\r\n\r\n    const distFromEdge = isAtTopEdge.value\r\n      ? distToTopEdge.value\r\n      : distToBottomEdge.value;\r\n    const speedPct = 1 - distFromEdge / autoscrollThreshold!;\r\n    const offset = speedPct * autoscrollSpeed;\r\n    const targetOffset = isAtTopEdge.value\r\n      ? Math.max(0, scrollOffset.value - offset)\r\n      : Math.min(\r\n          scrollOffset.value + offset,\r\n          scrollViewSize.value - containerSize.value\r\n        );\r\n\r\n    scrollTarget.value = targetOffset;\r\n    // Reanimated scrollTo is crashing on android. use 'regular' scrollTo until figured out.\r\n    // scrollTo(scrollViewRef, targetX, targetY, true);\r\n    runOnJS(scrollToInternal)(targetOffset);\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n"],"mappings":"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"}