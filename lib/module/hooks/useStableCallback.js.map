{"version":3,"names":["useRef","useCallback","useStableCallback","cb","cbRef","current","identityRetainingCb"],"sources":["useStableCallback.ts"],"sourcesContent":["import { useRef, useCallback } from \"react\";\r\n\r\n// Utility hook that returns a function that never has stale dependencies, but\r\n// without changing identity, as a useCallback with dep array would.\r\n// Useful for functions that depend on external state, but\r\n// should not trigger effects when that external state changes.\r\n\r\nexport function useStableCallback<\r\n  T extends (arg1?: any, arg2?: any, arg3?: any) => any\r\n>(cb: T) {\r\n  const cbRef = useRef(cb);\r\n  cbRef.current = cb;\r\n  const identityRetainingCb = useCallback(\r\n    (...args: Parameters<T>) => cbRef.current(...args),\r\n    []\r\n  );\r\n  return identityRetainingCb as T;\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,OAApC,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,iBAAT,CAELC,EAFK,EAEE;EACP,MAAMC,KAAK,GAAGJ,MAAM,CAACG,EAAD,CAApB;EACAC,KAAK,CAACC,OAAN,GAAgBF,EAAhB;EACA,MAAMG,mBAAmB,GAAGL,WAAW,CACrC;IAAA,OAA4BG,KAAK,CAACC,OAAN,CAAc,YAAd,CAA5B;EAAA,CADqC,EAErC,EAFqC,CAAvC;EAIA,OAAOC,mBAAP;AACD"}