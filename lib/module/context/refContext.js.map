{"version":3,"names":["React","useContext","useMemo","useRef","DEFAULT_PROPS","useProps","RefContext","createContext","undefined","RefProvider","children","flatListRef","value","useSetupRefs","useRefs","Error","flatListRefProp","props","animationConfig","propsRef","current","animConfig","animationConfigRef","cellDataRef","Map","keyToIndexRef","containerRef","flatlistRefInternal","flatlistRef","scrollViewRef","refs"],"sources":["refContext.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useMemo, useRef } from \"react\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport Animated, { WithSpringConfig } from \"react-native-reanimated\";\r\nimport { DEFAULT_PROPS } from \"../constants\";\r\nimport { useProps } from \"./propsContext\";\r\nimport { CellData, DraggableFlatListProps } from \"../types\";\r\n\r\ntype RefContextValue<T> = {\r\n  propsRef: React.MutableRefObject<DraggableFlatListProps<T>>;\r\n  animationConfigRef: React.MutableRefObject<WithSpringConfig>;\r\n  cellDataRef: React.MutableRefObject<Map<string, CellData>>;\r\n  keyToIndexRef: React.MutableRefObject<Map<string, number>>;\r\n  containerRef: React.RefObject<Animated.View>;\r\n  flatlistRef: React.RefObject<FlatList<T>> | React.ForwardedRef<FlatList<T>>;\r\n  scrollViewRef: React.RefObject<Animated.ScrollView>;\r\n};\r\nconst RefContext = React.createContext<RefContextValue<any> | undefined>(\r\n  undefined\r\n);\r\n\r\nexport default function RefProvider<T>({\r\n  children,\r\n  flatListRef,\r\n}: {\r\n  children: React.ReactNode;\r\n  flatListRef?: React.ForwardedRef<FlatList<T>> | null;\r\n}) {\r\n  const value = useSetupRefs<T>({ flatListRef });\r\n  return <RefContext.Provider value={value}>{children}</RefContext.Provider>;\r\n}\r\n\r\nexport function useRefs<T>() {\r\n  const value = useContext(RefContext);\r\n  if (!value) {\r\n    throw new Error(\r\n      \"useRefs must be called from within a RefContext.Provider!\"\r\n    );\r\n  }\r\n  return value as RefContextValue<T>;\r\n}\r\n\r\nfunction useSetupRefs<T>({\r\n  flatListRef: flatListRefProp,\r\n}: {\r\n  flatListRef?: React.ForwardedRef<FlatList<T>> | null;\r\n}) {\r\n  const props = useProps<T>();\r\n  const { animationConfig = DEFAULT_PROPS.animationConfig } = props;\r\n\r\n  const propsRef = useRef(props);\r\n  propsRef.current = props;\r\n  const animConfig = {\r\n    ...DEFAULT_PROPS.animationConfig,\r\n    ...animationConfig,\r\n  } as WithSpringConfig;\r\n  const animationConfigRef = useRef(animConfig);\r\n  animationConfigRef.current = animConfig;\r\n\r\n  const cellDataRef = useRef(new Map<string, CellData>());\r\n  const keyToIndexRef = useRef(new Map<string, number>());\r\n  const containerRef = useRef<Animated.View>(null);\r\n  const flatlistRefInternal = useRef<FlatList<T>>(null);\r\n  const flatlistRef = flatListRefProp || flatlistRefInternal;\r\n  const scrollViewRef = useRef<Animated.ScrollView>(null);\r\n\r\n  // useEffect(() => {\r\n  //   // This is a workaround for the fact that RN does not respect refs passed in\r\n  //   // to renderScrollViewComponent underlying ScrollView (currently not used but\r\n  //   // may need to add if we want to use reanimated scrollTo in the future)\r\n  //   //@ts-ignore\r\n  //   const scrollRef = flatlistRef.current?.getNativeScrollRef();\r\n  //   if (!scrollViewRef.current) {\r\n  //     //@ts-ignore\r\n  //     scrollViewRef(scrollRef);\r\n  //   }\r\n  // }, []);\r\n\r\n  const refs = useMemo(\r\n    () => ({\r\n      animationConfigRef,\r\n      cellDataRef,\r\n      containerRef,\r\n      flatlistRef,\r\n      keyToIndexRef,\r\n      propsRef,\r\n      scrollViewRef,\r\n    }),\r\n    []\r\n  );\r\n\r\n  return refs;\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AAGA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAYA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,CACjBC,SADiB,CAAnB;AAIA,eAAe,SAASC,WAAT,OAMZ;EAAA,IANoC;IACrCC,QADqC;IAErCC;EAFqC,CAMpC;EACD,MAAMC,KAAK,GAAGC,YAAY,CAAI;IAAEF;EAAF,CAAJ,CAA1B;EACA,oBAAO,oBAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAEC;EAA5B,GAAoCF,QAApC,CAAP;AACD;AAED,OAAO,SAASI,OAAT,GAAsB;EAC3B,MAAMF,KAAK,GAAGX,UAAU,CAACK,UAAD,CAAxB;;EACA,IAAI,CAACM,KAAL,EAAY;IACV,MAAM,IAAIG,KAAJ,CACJ,2DADI,CAAN;EAGD;;EACD,OAAOH,KAAP;AACD;;AAED,SAASC,YAAT,QAIG;EAAA,IAJsB;IACvBF,WAAW,EAAEK;EADU,CAItB;EACD,MAAMC,KAAK,GAAGZ,QAAQ,EAAtB;EACA,MAAM;IAAEa,eAAe,GAAGd,aAAa,CAACc;EAAlC,IAAsDD,KAA5D;EAEA,MAAME,QAAQ,GAAGhB,MAAM,CAACc,KAAD,CAAvB;EACAE,QAAQ,CAACC,OAAT,GAAmBH,KAAnB;EACA,MAAMI,UAAU,GAAG,EACjB,GAAGjB,aAAa,CAACc,eADA;IAEjB,GAAGA;EAFc,CAAnB;EAIA,MAAMI,kBAAkB,GAAGnB,MAAM,CAACkB,UAAD,CAAjC;EACAC,kBAAkB,CAACF,OAAnB,GAA6BC,UAA7B;EAEA,MAAME,WAAW,GAAGpB,MAAM,CAAC,IAAIqB,GAAJ,EAAD,CAA1B;EACA,MAAMC,aAAa,GAAGtB,MAAM,CAAC,IAAIqB,GAAJ,EAAD,CAA5B;EACA,MAAME,YAAY,GAAGvB,MAAM,CAAgB,IAAhB,CAA3B;EACA,MAAMwB,mBAAmB,GAAGxB,MAAM,CAAc,IAAd,CAAlC;EACA,MAAMyB,WAAW,GAAGZ,eAAe,IAAIW,mBAAvC;EACA,MAAME,aAAa,GAAG1B,MAAM,CAAsB,IAAtB,CAA5B,CAlBC,CAoBD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM2B,IAAI,GAAG5B,OAAO,CAClB,OAAO;IACLoB,kBADK;IAELC,WAFK;IAGLG,YAHK;IAILE,WAJK;IAKLH,aALK;IAMLN,QANK;IAOLU;EAPK,CAAP,CADkB,EAUlB,EAVkB,CAApB;EAaA,OAAOC,IAAP;AACD"}