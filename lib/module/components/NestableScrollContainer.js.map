{"version":3,"names":["React","ScrollView","Animated","useAnimatedScrollHandler","NestableScrollContainerProvider","useSafeNestableScrollContainerContext","useStableCallback","AnimatedScrollView","createAnimatedComponent","NestableScrollContainerInner","props","outerScrollOffset","containerSize","scrollViewSize","scrollableRef","outerScrollEnabled","onScroll","contentOffset","value","y","onLayout","event","nativeEvent","layout","height","onContentSizeChange","w","h","NestableScrollContainer","forwardRef","forwardedRef","undefined"],"sources":["NestableScrollContainer.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { LayoutChangeEvent, ScrollViewProps } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport Animated, { useAnimatedScrollHandler } from \"react-native-reanimated\";\r\nimport {\r\n  NestableScrollContainerProvider,\r\n  useSafeNestableScrollContainerContext,\r\n} from \"../context/nestableScrollContainerContext\";\r\nimport { useStableCallback } from \"../hooks/useStableCallback\";\r\n\r\nconst AnimatedScrollView = Animated.createAnimatedComponent(ScrollView);\r\n\r\nfunction NestableScrollContainerInner(props: ScrollViewProps) {\r\n  const {\r\n    outerScrollOffset,\r\n    containerSize,\r\n    scrollViewSize,\r\n    scrollableRef,\r\n    outerScrollEnabled,\r\n  } = useSafeNestableScrollContainerContext();\r\n\r\n  const onScroll = useAnimatedScrollHandler({\r\n    onScroll: ({ contentOffset }) => {\r\n      outerScrollOffset.value = contentOffset.y;\r\n    },\r\n  });\r\n\r\n  const onLayout = useStableCallback((event: LayoutChangeEvent) => {\r\n    const {\r\n      nativeEvent: { layout },\r\n    } = event;\r\n    containerSize.value = layout.height;\r\n  });\r\n\r\n  const onContentSizeChange = useStableCallback((w: number, h: number) => {\r\n    scrollViewSize.value = h;\r\n    props.onContentSizeChange?.(w, h);\r\n  });\r\n\r\n  return (\r\n    <AnimatedScrollView\r\n      {...props}\r\n      onLayout={onLayout}\r\n      onContentSizeChange={onContentSizeChange}\r\n      scrollEnabled={outerScrollEnabled}\r\n      ref={scrollableRef}\r\n      scrollEventThrottle={1}\r\n      onScroll={onScroll}\r\n    />\r\n  );\r\n}\r\n\r\nexport const NestableScrollContainer = React.forwardRef(\r\n  (props: ScrollViewProps, forwardedRef?: React.ForwardedRef<ScrollView>) => {\r\n    return (\r\n      <NestableScrollContainerProvider\r\n        forwardedRef={\r\n          (forwardedRef as React.MutableRefObject<ScrollView>) || undefined\r\n        }\r\n      >\r\n        <NestableScrollContainerInner {...props} />\r\n      </NestableScrollContainerProvider>\r\n    );\r\n  }\r\n);\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,QAAP,IAAmBC,wBAAnB,QAAmD,yBAAnD;AACA,SACEC,+BADF,EAEEC,qCAFF,QAGO,2CAHP;AAIA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,MAAMC,kBAAkB,GAAGL,QAAQ,CAACM,uBAAT,CAAiCP,UAAjC,CAA3B;;AAEA,SAASQ,4BAAT,CAAsCC,KAAtC,EAA8D;EAC5D,MAAM;IACJC,iBADI;IAEJC,aAFI;IAGJC,cAHI;IAIJC,aAJI;IAKJC;EALI,IAMFV,qCAAqC,EANzC;EAQA,MAAMW,QAAQ,GAAGb,wBAAwB,CAAC;IACxCa,QAAQ,EAAE,QAAuB;MAAA,IAAtB;QAAEC;MAAF,CAAsB;MAC/BN,iBAAiB,CAACO,KAAlB,GAA0BD,aAAa,CAACE,CAAxC;IACD;EAHuC,CAAD,CAAzC;EAMA,MAAMC,QAAQ,GAAGd,iBAAiB,CAAEe,KAAD,IAA8B;IAC/D,MAAM;MACJC,WAAW,EAAE;QAAEC;MAAF;IADT,IAEFF,KAFJ;IAGAT,aAAa,CAACM,KAAd,GAAsBK,MAAM,CAACC,MAA7B;EACD,CALiC,CAAlC;EAOA,MAAMC,mBAAmB,GAAGnB,iBAAiB,CAAC,CAACoB,CAAD,EAAYC,CAAZ,KAA0B;IAAA;;IACtEd,cAAc,CAACK,KAAf,GAAuBS,CAAvB;IACA,yBAAAjB,KAAK,CAACe,mBAAN,qFAAAf,KAAK,EAAuBgB,CAAvB,EAA0BC,CAA1B,CAAL;EACD,CAH4C,CAA7C;EAKA,oBACE,oBAAC,kBAAD,eACMjB,KADN;IAEE,QAAQ,EAAEU,QAFZ;IAGE,mBAAmB,EAAEK,mBAHvB;IAIE,aAAa,EAAEV,kBAJjB;IAKE,GAAG,EAAED,aALP;IAME,mBAAmB,EAAE,CANvB;IAOE,QAAQ,EAAEE;EAPZ,GADF;AAWD;;AAED,OAAO,MAAMY,uBAAuB,gBAAG5B,KAAK,CAAC6B,UAAN,CACrC,CAACnB,KAAD,EAAyBoB,YAAzB,KAA2E;EACzE,oBACE,oBAAC,+BAAD;IACE,YAAY,EACTA,YAAD,IAAwDC;EAF5D,gBAKE,oBAAC,4BAAD,EAAkCrB,KAAlC,CALF,CADF;AASD,CAXoC,CAAhC"}